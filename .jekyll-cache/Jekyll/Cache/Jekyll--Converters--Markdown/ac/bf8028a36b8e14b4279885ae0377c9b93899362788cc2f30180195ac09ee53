I"v<p>REST는 Representational State Transfer의 약자로 아키텍처 스타일이다. 아키텍처 스타일은 아키텍처 패턴과는 조금 다른데 <code class="language-plaintext highlighter-rouge">아키텍처 패턴은 어떤 반복되는 문제 상황을 해결하는 도구</code>이고, <code class="language-plaintext highlighter-rouge">아키텍처 스타일은 반복되는 아키텍처 디자인을 의미</code>한다.<br />
<strong>REST 아키텍처 스타일은 6가지 제약조건으로 구성되며, 이 가이드 라인을 따르는 API를 RESTfull API</strong>라고 한다.</p>

<p><strong>REST 제약 조건</strong></p>
<ul>
  <li>클라이언트-서버(Client-Server)</li>
  <li>상태가 없는(stateless)</li>
  <li>캐시되는 데이터(Cacheable)</li>
  <li>일관적인 인터페이스(Uniform Interface)</li>
  <li>레이어 시스템(Layered System)</li>
  <li>코드-온-디맨트(Code-On-Demand)</li>
</ul>

<hr />

<h2 id="클라이언트-서버client-server"><span style="color:MediumSeaGreen">클라이언트-서버(Client-Server)</span></h2>
<p><strong>클라이언트-서버는 리소스를 관리하는 서버가 존재하고, 다수의 클라이언트가 리소스를 소비하려고 네트워크를 통해 서버에 접근하는 구조를 말한다.</strong></p>

<p>이런 구조 중 우리에게 가장 친숙한 것이 바로 웹 애플리케이션이다.</p>

<blockquote>
  <p>리소스란 REST API가 리턴할 수 있는 모든 것(HTML, JSON, 이미지 등)을 의미한다.</p>
</blockquote>

<hr />

<h2 id="상태가-없는stateless"><span style="color:MediumSeaGreen">상태가 없는(stateless)</span></h2>
<p><strong>상태가 없다는 것은 클라이언트가 서버에 요청을 보낼 때, 이전 요청의 영향을 받지 않음을 의미한다.</strong></p>

<p>예를 들어 로그인의 경우 서버는 로그인 상태를 유지하지 못하므로, 요청을 보낼 때마다 로그인 정보를 항상 함께 보내야 한다. 리소스를 수정한 후 수정한 상태를 유지해야 하는 경우에는 서버가 아닌 DB와 같은 곳에 상태를 저장해야한다.</p>

<p>HTTP는 기본적으로 상테가 없는 프로토콜이다. 따라서 HTTP를 사용하는 웹 애플리케이션은 기본적으로 상태가 없는 구조를 따른다.</p>

<hr />

<h2 id="3계층네트워크-계층"><span style="color:MediumSeaGreen">3계층(네트워크 계층)</span></h2>
<p><strong>3계층에는 IP 주소와 같은 논리적인 주소가 정의된다</strong>.</p>

<p><code class="language-plaintext highlighter-rouge">데이터 통신을 할 떄는 2계층의 물리적인 MAC 주소와 3계층의 논리적인 IP 주소가 사용된다.</code></p>

<p>3계층을 이해할 수 있는 장비나 단말은 네트워크 주소 정보를 이용해 자신이 속한 네트워크와 원격지 네트워크를 구분할 수 있고, 원격지 네트워크를 가려면 어디로 가야 하는지 경로를 지정한다.</p>

<ul>
  <li>주요 장비 : 라우터
    <ul>
      <li>라우터 : IP 주소를 사용해 최적의 경로를 찾고, 해당 경로로 패킷을 전송</li>
    </ul>
  </li>
</ul>

<p><img src="/assets/images/network/osi7layer/router.jpeg" alt="img.png" /></p>

<hr />

<h2 id="4계층트랜스포트-계층"><span style="color:MediumSeaGreen">4계층(트랜스포트 계층)</span></h2>
<p><strong>4계층은 실제로 데이터들이 정상적으로 잘 보내지도록 확인하는 역할을 한다</strong>.</p>

<p>패킷 네트워크는 데이터를 분할해 패킷에 실어보내다 보니 중간에 유실되거나, 순서가 뒤바뀔 수 있다. 이 문제를 바로 잡아주는 역할을 한다.</p>

<p><code class="language-plaintext highlighter-rouge">패킷에 보내는 순서를 명시하는 것이 시퀀스 번호이고, 받는 순서를 나타내는 것이 ACK 번호이다.</code> 또한, 포트 번호를 사용해 상위 애플리케이션을 구분한다.</p>

<ul>
  <li>주요 장비 : 로드 밸런서, 방화벽
    <ul>
      <li>로드 밸런서 : 부하 분산</li>
      <li>방화벽 : 패킷 통과 또는 차단</li>
    </ul>
  </li>
</ul>

<hr />

<h2 id="5계층세션-계층"><span style="color:MediumSeaGreen">5계층(세션 계층)</span></h2>
<p><strong>5계층인 세션 계층은 양 끝단의 응용 프로세스가 연결을 성립하도록 도와주고 연결이 안정적으로 유지되도록 관리하며, 작업 완료 후에는 연결을 끊는 역할을 수행한다</strong>.</p>

<p><code class="language-plaintext highlighter-rouge">TCP/IP 세션을 만들고 없애는 책임을 가지며, 에러로 중단된 통신에 대한 에러 복구와 재전송도 수행한다.</code></p>

<hr />

<h2 id="6계층프레젠테이션-계층"><span style="color:MediumSeaGreen">6계층(프레젠테이션 계층)</span></h2>
<p><strong>6계층인 프레젠테이션 계층은 표현 방시깅 다른 애플리케이션이나 시스템 간의 통신을 돕기 위해 하나의 통일된 구문 형식으로 변환시키는 기능을 수행한다</strong>.</p>

<p>변환기 역할을 수행하는 계층으로, <code class="language-plaintext highlighter-rouge">MIME 인코딩이나 암호화, 압축, 코드 변환과 같은 동작이 이루어진다.</code></p>

<hr />

<h2 id="7계층애플리케이션-계층"><span style="color:MediumSeaGreen">7계층(애플리케이션 계층)</span></h2>
<p><strong>7계층인 애플리케이션 계층은 애플리케이션 프로세스를 정의하고, 애플리케이션 서비를 수행한다</strong>.</p>

<p><code class="language-plaintext highlighter-rouge">네트워크 소프트웨어의 UI 부분이나, 사용자 입/출력 부분을 정의하는 것이 애플리케이션 계층의 역할이다.</code></p>

<p>대표적인 프로토콜 : FTP, SMTP, HTTP, TELNET</p>

<hr />

<h2 id="계층별-주요-프로토콜-및-장비"><span style="color:MediumSeaGreen">계층별 주요 프로토콜 및 장비</span></h2>

<table>
  <thead>
    <tr>
      <th style="text-align: center">계층</th>
      <th style="text-align: center">주요 프로토콜</th>
      <th style="text-align: center">장비</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">애플리케이션 계층</td>
      <td style="text-align: center">HTTP, SMP, SMTP, STUN, TFTP, TELNET</td>
      <td style="text-align: center">ADC, NGFW, WAF</td>
    </tr>
    <tr>
      <td style="text-align: center">프레젠테이션 계층</td>
      <td style="text-align: center">TLS, AFP, SSH</td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: center">세션 계층</td>
      <td style="text-align: center">L2TP, PPTP, NFS, RPC, PTCP, SIP, SSH</td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: center">트랜스포트 계층</td>
      <td style="text-align: center">TCP, UDP, SCTP, DCCP, AH, AEP</td>
      <td style="text-align: center">로드 밸런서, 방화벽</td>
    </tr>
    <tr>
      <td style="text-align: center">네트워크 계층</td>
      <td style="text-align: center">ARP, IPv4, IPv6, NATm IPSec, 라우팅 프로토콜</td>
      <td style="text-align: center">라우터, L3 스위치</td>
    </tr>
    <tr>
      <td style="text-align: center">데이터 링크 계층</td>
      <td style="text-align: center">IEEE 802.2, FDDI</td>
      <td style="text-align: center">스위치, 브릿지, 네트워크 카드</td>
    </tr>
    <tr>
      <td style="text-align: center">피지컬 계층</td>
      <td style="text-align: center">RS-232, RS-449, V.35, S 등의 케이블</td>
      <td style="text-align: center">케이블, 허브, 탭(TAP)</td>
    </tr>
  </tbody>
</table>

:ET