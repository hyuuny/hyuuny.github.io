I"+<h2 id="ignoring"><span style="color:MediumSeaGreen">ignoring</span></h2>
<p>WebSecurity의 <strong>ignoring()을 사용해서 요청시 시큐리티 필터 적용을 제외하도록 설정할 수 있다.</strong> 스프링 부트가 제공하는 PathRequest를 사용하면 정적(static) 자원 요청에 대하여 스프링 시큐리티 필터가 적용되지 않도록 설정할 수 있는데, 이경우 FilterChain을 거치지 않는다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="kd">public</span> <span class="kt">void</span> <span class="nf">configure</span><span class="o">(</span><span class="nc">WebSecurity</span> <span class="n">web</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> <span class="o">{</span>
    <span class="n">web</span><span class="o">.</span><span class="na">ignoring</span><span class="o">().</span><span class="na">requestMatchers</span><span class="o">(</span><span class="nc">PathRequest</span><span class="o">.</span><span class="na">toStaticResources</span><span class="o">().</span><span class="na">atCommonLocations</span><span class="o">());</span>
   <span class="o">}</span>
</code></pre></div></div>

<hr />

<h2 id="다른-설정방법"><span style="color:MediumSeaGreen">다른 설정방법</span></h2>
<ul>
  <li>하나에 설정할수도 있지만, FilterChain 15개를 거치게 되므로, 리소스 낭비가 발생하게 된다.(권장 X)</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nd">@Override</span>
  <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">configure</span><span class="o">(</span><span class="nc">HttpSecurity</span> <span class="n">http</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> <span class="o">{</span>
    <span class="n">http</span><span class="o">.</span><span class="na">authorizeRequests</span><span class="o">()</span>
        <span class="o">.</span><span class="na">antMatchers</span><span class="o">(</span><span class="s">"/"</span><span class="o">,</span> <span class="s">"/info"</span><span class="o">,</span> <span class="s">"/account/**"</span><span class="o">).</span><span class="na">permitAll</span><span class="o">()</span> <span class="c1">// 누구나 접근 가능</span>
        <span class="o">.</span><span class="na">mvcMatchers</span><span class="o">(</span><span class="s">"/admin"</span><span class="o">).</span><span class="na">hasRole</span><span class="o">(</span><span class="s">"ADMIN"</span><span class="o">)</span> <span class="c1">// hasRole로 접근 가능한 권한 부여</span>
        <span class="o">.</span><span class="na">mvcMatchers</span><span class="o">(</span><span class="s">"/user"</span><span class="o">).</span><span class="na">hasRole</span><span class="o">(</span><span class="s">"USER"</span><span class="o">)</span>
        <span class="o">.</span><span class="na">requestMatchers</span><span class="o">(</span><span class="nc">PathRequest</span><span class="o">.</span><span class="na">toStaticResources</span><span class="o">().</span><span class="na">atCommonLocations</span><span class="o">()).</span><span class="na">permitAll</span><span class="o">()</span>
        <span class="o">.</span><span class="na">anyRequest</span><span class="o">().</span><span class="na">authenticated</span><span class="o">()</span> <span class="c1">// anyRequest().authenticated() &lt;- 그 외 인증만 하면 접근 가능</span>
        <span class="o">.</span><span class="na">expressionHandler</span><span class="o">(</span><span class="n">expressionHandler</span><span class="o">());</span>
    <span class="n">http</span><span class="o">.</span><span class="na">formLogin</span><span class="o">();</span>
    <span class="n">http</span><span class="o">.</span><span class="na">httpBasic</span><span class="o">();</span>
  <span class="o">}</span>
</code></pre></div></div>

<p><img src="/assets/images/spring-security/ignoring-img.png" alt="img.png" /></p>

<hr />

<h2 id="핵심"><span style="color:MediumSeaGreen">핵심</span></h2>

<hr />

<p><strong>정적 리소스는 WebSecurity.ignore()를 권장</strong>하며,
<strong>예외적인 정적 자원 (인증이 필요한 정적자원이 있는 경우)는 http.authorizeRequests()를 사용</strong>할 수 있다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="kd">public</span> <span class="kt">void</span> <span class="nf">configure</span><span class="o">(</span><span class="nc">WebSecurity</span> <span class="n">web</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> <span class="o">{</span>
    <span class="n">web</span><span class="o">.</span><span class="na">ignoring</span><span class="o">().</span><span class="na">requestMatchers</span><span class="o">(</span><span class="nc">PathRequest</span><span class="o">.</span><span class="na">toStaticResources</span><span class="o">().</span><span class="na">atCommonLocations</span><span class="o">());</span>
  <span class="o">}</span>
</code></pre></div></div>

<ul>
  <li><strong>동적 리소스는 http.authorizeRequests()에서 처리</strong>하는 것을 권장</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nd">@Override</span>
  <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">configure</span><span class="o">(</span><span class="nc">HttpSecurity</span> <span class="n">http</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> <span class="o">{</span>
    <span class="n">http</span><span class="o">.</span><span class="na">authorizeRequests</span><span class="o">()</span>
        <span class="o">.</span><span class="na">antMatchers</span><span class="o">(</span><span class="s">"/"</span><span class="o">,</span> <span class="s">"/info"</span><span class="o">,</span> <span class="s">"/account/**"</span><span class="o">).</span><span class="na">permitAll</span><span class="o">()</span> <span class="c1">// 누구나 접근 가능</span>
        <span class="o">.</span><span class="na">mvcMatchers</span><span class="o">(</span><span class="s">"/admin"</span><span class="o">).</span><span class="na">hasRole</span><span class="o">(</span><span class="s">"ADMIN"</span><span class="o">)</span> <span class="c1">// hasRole로 접근 가능한 권한 부여</span>
        <span class="o">.</span><span class="na">mvcMatchers</span><span class="o">(</span><span class="s">"/user"</span><span class="o">).</span><span class="na">hasRole</span><span class="o">(</span><span class="s">"USER"</span><span class="o">)</span>
        <span class="o">.</span><span class="na">requestMatchers</span><span class="o">(</span><span class="nc">PathRequest</span><span class="o">.</span><span class="na">toStaticResources</span><span class="o">().</span><span class="na">atCommonLocations</span><span class="o">()).</span><span class="na">permitAll</span><span class="o">()</span>
        <span class="o">.</span><span class="na">anyRequest</span><span class="o">().</span><span class="na">authenticated</span><span class="o">()</span> <span class="c1">// anyRequest().authenticated() &lt;- 그 외 인증만 하면 접근 가능</span>
        <span class="o">.</span><span class="na">expressionHandler</span><span class="o">(</span><span class="n">expressionHandler</span><span class="o">());</span>
    <span class="n">http</span><span class="o">.</span><span class="na">formLogin</span><span class="o">();</span>
    <span class="n">http</span><span class="o">.</span><span class="na">httpBasic</span><span class="o">();</span>
  <span class="o">}</span>
</code></pre></div></div>
:ET