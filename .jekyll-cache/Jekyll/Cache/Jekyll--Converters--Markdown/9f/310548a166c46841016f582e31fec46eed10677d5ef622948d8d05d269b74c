I"U<p>월드 와이드 웹을 지탱하는 가장 중요한 기술 <strong>두 가지는 HTML과 HTTP</strong>이다. 이 두 기술은 팀 버너스 리가 웹을 발명할 때 함께 만들어졌다. 전 세계의 <strong>웹 브라우저, 서버, 웹 애플리케이션은 모두 HTTP(Hyper Text Tranfer Protocol)</strong>를 통해 서로 대화한다.</p>

<h2 id="인터넷의-멀티미디어-배달부"><span style="color:MediumSeaGreen">인터넷의 멀티미디어 배달부</span></h2>
<p>수십억 개의 JPEG 이미지, HTML 페이지, 텍스트 파일, MPEG 동영상, WAV 음성 파일, 자바 애플릿 등이 인터넷을 항해한다. HTTP는 전 세계의 웹 서버로부터 이 대량의 정보를 빠르고, 간편하고, 정확하게 웹 브라우저로 옮겨준다.<br />
<strong>HTTP는 신뢰성 있는 데이터를 전송 프로토콜을 사용</strong>하게 때문에, 데이터가 지구 반대편에서 오더라도 전송 중 손상되거나 꼬이지 않음을 보장한다. 그 덕분에 개발자는 인터넷의 결합이나 약점에 대한 걱정 없이 애플리케이션 고유의 기능을 구현하는데 집중할 수 있다.</p>

<hr />

<h2 id="웹-클라이언트와-서버"><span style="color:MediumSeaGreen">웹 클라이언트와 서버</span></h2>
<p>웹 컨텐츠는 웹 서버에 존재한다.<br />
<strong>웹 서버는 HTTP 프로토콜로 의사소통하기 때문에 보통 HTTP 서버라고 불리며, 인터넷의 데이터를 저장하고, HTTP 클라이언트가 요청한 데이터를 제공</strong>한다.<br />
클라이언트는 서버에게 HTTP 요청을 보내고 서버는 요청된 데이터를 HTTP 응답으로 돌려주는데 예를 들어 “http://www.oreilly.com/index.html”페이지를 요청한다했을 때 이 과정은 다음과 같다.</p>
<ol>
  <li>웹 브라우저는 HTTP 요청을 www.oreilly.com 서버로 보낸다.</li>
  <li>서버는 요청받은 객체(이 경우 “/index.html”)를 찾아 성공했다면 그것의 타입, 길이 등의 정보와 함꼐 HTTP 응답에 실어서 클라이언트에게 보낸다.</li>
</ol>

<hr />

<h2 id="리소스"><span style="color:MediumSeaGreen">리소스</span></h2>
<p>웹 서버는 웹 리소스를 관리하고 제공한다.<br />
웹 리소스는 웹 컨텐츠의 원천으로 가장 단순한 웹 리소스는 웹 서버 파일 시스템의 정적 파일이다. 정적 파일은 텍스트 파일, HTML 파일, 마이크로소츠트 워드 파일, 어도비 아크로뱃파일, JPEG 이미지 파일 외 모든 종류의 파일을 포함한다. <br />
그러나 <strong>리소스는 반드시 정적 파일이어야 할 필요는 없다</strong>. 리소스는 카메라에서 라이브 영상을 가져와 보여주거나, 주식 거래, 부동산 데이터베이스 등 요청에 따라 컨텐츠를 생산하는 프로그램이 될수도 있다.<br />
결국 <strong>어떤 종류의 컨텐츠 소스도 리소스가 될 수 있다.</strong><br />
<br /></p>

<p><span style="color:DodgerBlue">미디어 타입</span><br />
HTTP는 웹에서 전송되는 객체 각각에 MIME타입이라는 데이터 포맷 라벨을 붙인다.<br />
MIME(Multipurpose Internet Mail Extensions)은 원래 각기 다른 전자메일 시스템 사이에서 메시지가 오갈 때 겪는 문제점을 해결하기 위해 설계되었는데, 이메일에서 워낙 잘 동작했기 때문에 HTTP에서도 멀티미디어 컨첸츠를 기술하고 라벨을 붙이기 위해 채택되었다.<br />
<strong>웹 서버는 모든 HTTP 객체 데이터에 MIME 타입을 붙인다</strong>. MIME 타입은 사선(/)으로 구분된 주 타입(primary object type)과 부 타입(specific subtype)으로 이루어진 문자열 라벨로 예를 들면 아래와 같다.</p>
<ul>
  <li>HTML로 작성된 텍스트 문서는 text/html 라벨이 붙는다.</li>
  <li>plain ASCII 텍스트 문서는 text/plain 라벨이 붙는다.</li>
  <li>JPEG 이미지는 image/jpeg가 붙는다.</li>
  <li>GIF 이미지는 image/gif가 된다.<br />
<br /></li>
</ul>

<p><span style="color:DodgerBlue">URI</span><br />
<strong>서버 리소스 이름은 통합 자원 식별자(uniform resource identifier), 혹은 URL로 불린다.</strong> URL는 인터넷의 우편물 주소 같은 것으로, <strong>정보 리소스를 고유하게 식별하고 위치를 지정</strong>할 수 있다.<br />
<br /></p>

<p><span style="color:DodgerBlue">URL</span><br />
통합 자원 지시자(uniform resource locator, URL)는 리소스 식별자의 가장 흔한 형태다. <strong>URL은 특정 서버의 한 리소스에 대한 구체적인 위치를 서술</strong>한다. URL은 리소스가 정확히 어디에 있고 어떻게 접근할 수 있는지 분명히 알려준다.</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">URL</th>
      <th style="text-align: center">설명</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">http://www.oreilly.com/index.html</td>
      <td style="text-align: center">오라일리 출판사 홈페이지의 URL</td>
    </tr>
    <tr>
      <td style="text-align: center">http://www.yahoo.com/images/logo.gif</td>
      <td style="text-align: center">야후! 웹사이트 로고의 URL</td>
    </tr>
  </tbody>
</table>

<p>대부분의 URL은 세 부분으로 이루어진 표준 포멧을 따른다.</p>
<ul>
  <li>URL의 첫 번째 부분은 스킴(scheme)이라고 불리는데, 리소스에 접근하기 위해 사용되는 프로토콜을 서술한다. 보통 HTTP 프로토콜(http://)이다.</li>
  <li>두 번째 부분은 서버의 인터넷 주소를 제공한다.(예:www.joes-hardware.com)</li>
  <li>마지막 세 번째 부분은 웹 서버의 리소스를 가리킨다.(예:/specials/save-blade.gif)<br />
<br /></li>
</ul>

<hr />

<h2 id="트랜잭션"><span style="color:MediumSeaGreen">트랜잭션</span></h2>
<p><strong>HTTP 트랜잭션은 요청 명령(클라이언트에서 서버로 보내는)과 응답 결과(서버가 클라이언트에게 돌려주는)로 구성</strong>되어 있다. 이 상호작용은 HTTP 메시지라고 불리는 정형화된 데이터 덩어리를 이용해 이루어진다.</p>
:ET