I"{<h2 id="mappedby"><span style="color:MediumSeaGreen">mappedBy</span></h2>

<ul>
  <li>mappedBy를 알아보기에 앞서 <code class="language-plaintext highlighter-rouge">객체와 테이블이 관계를 맺는 차이</code>를 알아보자</li>
</ul>

<p><img src="/assets/images/jpa/Annualrelationship.png" alt="img.png" /></p>

<ul>
  <li>객체의 서로 단방향으로 관계를 맺기 때문에 2개의 연관관계가 존재하게 된다.
    <ul>
      <li>회원 -&gt; 팀 : 연관관계 1개(단방향)</li>
      <li>팀 -&gt; 회원 : 연관관계 1개(단방향)</li>
    </ul>
  </li>
  <li>반면 테이블은 한쪽이 다른 쪽 pk를 참조하는 방식으로 1개의 연관관계가 존재하게 된다.
    <ul>
      <li>회원 &lt;-&gt; 팀 : 연관관계 1개(양방향)</li>
    </ul>
  </li>
</ul>

<h6 id="객체의-양방향-관계"><span style="color:DodgerBlue">객체의 양방향 관계</span></h6>
<ul>
  <li><strong>객체의 양뱡향 관계는 사실 <span style="color:red">양뱡향 관계가 아니라 서로 다른 단방향 관계 2개</span>다.</strong></li>
  <li>객체를 <strong>양뱡향으로 참조하려면 단방향 연관관계를 2개 만들어야 한다</strong>.</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// A -&gt; B (a.getB())</span>
<span class="kd">class</span> <span class="nc">A</span> <span class="o">{</span> 
    <span class="kd">private</span> <span class="no">B</span> <span class="n">b</span><span class="o">;</span>
<span class="o">}</span>

<span class="c1">// B -&gt; A (b.getA())</span>
<span class="kd">class</span> <span class="nc">B</span> <span class="o">{</span>
    <span class="kd">private</span> <span class="no">A</span> <span class="n">a</span><span class="o">;</span>
<span class="o">}</span>
</code></pre></div></div>

<h6 id="테이블의-양방향-관계"><span style="color:DodgerBlue">테이블의 양방향 관계</span></h6>

<ul>
  <li><strong>테이블은 외래 키 하나로 두 테이블의 연관관계를 관리</strong></li>
  <li>MEMBER.TEAM_ID <strong>외래 키 하나로 양방향 연관관계 가짐</strong>
    <ul>
      <li>양쪽으로 조인할 수 있다.</li>
    </ul>
  </li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">select</span> <span class="o">*</span> <span class="n">from</span> <span class="nc">Member</span> <span class="n">m</span>
	<span class="nc">Join</span> <span class="nc">Team</span> <span class="n">t</span> <span class="n">on</span> <span class="n">m</span><span class="o">.</span><span class="na">Team_id</span> <span class="o">=</span> <span class="n">t</span><span class="o">.</span><span class="na">member_id</span>

<span class="n">select</span> <span class="o">*</span> <span class="n">from</span> <span class="nc">Team</span> <span class="n">t</span> 
	<span class="nc">Join</span> <span class="nc">Member</span> <span class="n">m</span> <span class="n">on</span> <span class="n">t</span><span class="o">.</span><span class="na">member_id</span> <span class="o">=</span> <span class="n">m</span><span class="o">.</span><span class="na">Team_id</span>
</code></pre></div></div>

<hr />

<ul>
  <li>테이블은 한쪽에서 다른쪽 pk를 참조함으로써 관리하게 되지만, 객체는 어떻게 관리해야할지 딜레마에 빠지게 된다.</li>
</ul>

<p><img src="/assets/images/jpa/Annualrelationship2.png" alt="img.png" /></p>

<ul>
  <li>객체는 결국 <strong>둘 중 하나를 주인으로 정해야하는데 이게 바로 연관관계의 주인</strong>이 된다.</li>
</ul>

<hr />

:ET